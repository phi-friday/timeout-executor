name: Publish Package

on:
  release:
    types: [created]

jobs:
  publish:
    runs-on: ubuntu-latest
    name: "Publish library"
    strategy:
      matrix:
        python-version: ["3.8", "3.11"]

    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          fetch-depth: 0

      - name: Install poetry
        run: |
          pipx install poetry
          poetry config installer.modern-installation false
          poetry config virtualenvs.in-project true

      - name: Setup Python Env ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry
          cache-dependency-path: |
            **/poetry.lock

      - name: Install dependencies
        run: pip install dunamai

      - name: Set version
        id: set_version
        run: |
          VERSION=$(dunamai from any --no-metadata --style pep440)
          poetry version $VERSION
          cat src/timeout_executor/__init__.py | \
            sed "s/\"0.0.0\"/\"$VERSION\"/g" > \
            src/timeout_executor/__init__.py
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Build package
        run: |
          poetry build
          VERSION={{ steps.set_version.outputs.VERSION}}$
          PY_VERSION=$(echo "${{ matrix.python-version }}" | sed "s/\.//g")
          mv dist/timeout_executor-$VERSION-py3-none-any.whl dist/timeout_executor-$VERSION-py$PY_VERSION-none-any.whl

      - name: Release to PyPI
        run: |
          poetry publish -u __token__ -p ${{ secrets.PYPI_API_TOKEN }} || \
            echo 'Version exists'